@model IEnumerable<WebApplicationFinal.Models.ExploreClass>
@{
    ViewBag.Title = "LeaveReview";
    Layout = "~/Views/Shared/_Layout.cshtml";


}
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<html>
<script src="~/Scripts/Slideshow.js"></script>

<script src="~/Scripts/Slideshow.js"></script>
<link href="~/Styles/Trip.css" rel="stylesheet" />
<script src='https://kit.fontawesome.com/a076d05399.js'></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<head />

<div class="slider" id="main-slider">
    <!-- outermost container element -->
    <div class="slider-wrapper">
        <!-- innermost wrapper element -->


        @foreach (var details in ViewBag.list1)
        {


            <img src="data:image;base64,@System.Convert.ToBase64String(details.image)" alt="First" class="slide" />

        }
    </div>
</div>


<div class="content">
    <div class="info">
        @foreach (var details in ViewBag.list1)
        {
            <div class="headline">
                <div class="trip_name">
                    @details.trip_name
                </div>

                @{ int counter = 0;
                    int b = 0;
                    int resultat = 0; }


                @foreach (var detail in ViewBag.listReview)
                {


                    if (details.trip_id == detail.idtag.ToString())
                    {
                        b += detail.rating;
                        counter++;
                    }
                }
                @{
                    resultat = b / counter;



                    b = 0;
                    counter = 0;
                }
                <div class="star">
                    @for (int i = 0; i < @resultat; i++)
                    {
                        <span class="fa fa-star checked"></span>
                    }
                    @for (int i = 0; i < (5 - @resultat); i++)
                    {
                        <span class="fa fa-star"></span>
                    }
                </div>

            </div>

            <div class="lendif">
                <hr>
                <div class="line"><div class="label">Area</div> <div class="areaIcon"><i class='fas fa-map-marker-alt' style='font-size:24px'></i> @details.city</div></div>
                <hr>
                <div class="line"><div class="label"> Type of trip </div> <div class="type">@Html.Raw(@ViewBag.icon)  @details.type_of_trip</div></div>
                <hr>
                <div class="line"><div class="label"> Length of trip </div> <div class="length_icon"><i class='fas fa-route' style='font-size:24px'></i> @details.length</div></div>
                <hr>
                <div class="line"><div class="label">Difficulty </div> <div class="difIcon">@Html.Raw(ViewBag.diffIcon) @details.difficulty</div></div>
                <hr>
            </div>
            break;

        }
    </div>










    <div id="dvMap" style="min-height:300px; width:100%; max-width: 400px; "></div>












    @foreach (var details in ViewBag.list1)
    {

        <div class="descriptionn"><p>@details.description</p></div>
        break;
    }
</div>






@section scripts{

    <!--ENSURE YOU CHANGE TO YOUR OWN API KEY HERE !!! -->
    <script src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyCXIYBi8WK7uE93JnEIXiXfHQjCXdBUx8U&" type="text/javascript"></script>

    <script>

            var source, destination;
            var directionsDisplay;
            var res, ras;
            var directionsService = new google.maps.DirectionsService();

            // initialise the location of the map on Chichester in England (ref lat and lng)
            var map = new google.maps.Map(document.getElementById('dvMap'), {
                center: { lat: 50.834697, lng: -0.773792 },
                zoom: 13,
                mapTypeId: 'roadmap'
            });

            google.maps.event.addDomListener(window, 'load', function () {
                new google.maps.places.SearchBox(document.getElementById('travelfrom'));
                new google.maps.places.SearchBox(document.getElementById('travelto'));
                directionsDisplay = new google.maps.DirectionsRenderer({ 'draggable': true });
            });

           window.onload = function() {

                directionsDisplay.setMap(map);

                var jsonObj = @Html.Raw(Json.Encode(ViewBag.coordinates));
                for (i = 0; i < jsonObj .length; i++) {
                    var startLat = jsonObj[i].startLatitude.replace(",", ".");
                    var startLong = jsonObj[i].startLongitude.replace(",", ".");
                    var endLat = jsonObj[i].endLatitude.replace(",", ".");
                    var endLong = jsonObj[i].endLongitude.replace(",", ".");
                    var source = startLat + "," + startLong;
                    var destination = endLat +","+endLong;
                }



                var request = {
                    origin: source,
                    destination: destination,
                    travelMode: google.maps.TravelMode.WALKING
                };

                   directionsService.route(request, function (response, status) {
                       if (status == google.maps.DirectionsStatus.OK) {
                           directionsDisplay.setDirections(response);
                       }
                   });

                   //*********DISTANCE AND DURATION**********************//
                   var service = new google.maps.DistanceMatrixService();
                   service.getDistanceMatrix({
                   origins: [source],
                    destinations: [destination],
                    travelMode: google.maps.TravelMode.DRIVING,
                    unitSystem: google.maps.UnitSystem.METRIC,
                    avoidHighways: false,
                    avoidTolls: false
                   }, function (response, status) {

                       if (status == google.maps.DistanceMatrixStatus.OK && response.rows[0].elements[0].status != "ZERO_RESULTS") {
                           var distance = response.rows[0].elements[0].distance.text;
                           var duration = response.rows[0].elements[0].duration.value;
                           var dvDistance = document.getElementById("dvDistance");
                           duration = parseFloat(duration / 60).toFixed(2);
                           dvDistance.innerHTML = "";
                           dvDistance.innerHTML += "Distance: " + distance + "<br />";
                           dvDistance.innerHTML += "Time:" + duration + " min";

                       } else {
                           alert("Unable to find the distance via road.");
                       }
                   });
               }

    </script>
}
</html>