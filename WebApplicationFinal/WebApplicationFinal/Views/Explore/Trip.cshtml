@model IEnumerable<WebApplicationFinal.Models.ExploreClass>
@{
    ViewBag.Title = "Trip";
    Layout = "~/Views/Shared/_Layout.cshtml";


}
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <html>
    <script src="~/Scripts/Slideshow.js"></script>

    <script src="~/Scripts/Slideshow.js"></script>
    <link href="~/Styles/Trip.css" rel="stylesheet" />
    <script src='https://kit.fontawesome.com/a076d05399.js'></script>

    <head />

    <div class="slider" id="main-slider">
        <!-- outermost container element -->
        <div class="slider-wrapper">
            <!-- innermost wrapper element -->


            @foreach (var details in ViewBag.list1)
            {


                <img src="data:image;base64,@System.Convert.ToBase64String(details.image)" alt="First" class="slide" />

            }
        </div>
    </div>


    <div class="content">
        <div class="info">
            @foreach (var details in ViewBag.list1)
            {
                <div class="trip_name">  @details.trip_name</div>
                <div class="lendif">
                    <hr>
                    <div class="line"><div class="label">Area</div> <div class="areaIcon"><i class='fas fa-map-marker-alt' style='font-size:24px'></i> @details.city</div></div>
                    <hr>
                    <div class="line"><div class="label"> Type of trip </div> <div class="type">@Html.Raw(@ViewBag.icon)  @details.type_of_trip</div></div>
                    <hr>
                    <div class="line"><div class="label"> Length of trip </div> <div class="length_icon"><i class='fas fa-route' style='font-size:24px'></i> @details.length</div></div>
                    <hr>
                    <div class="line"><div class="label">Difficulty </div> <div class="difIcon">@Html.Raw(ViewBag.diffIcon) @details.difficulty</div></div>
                    <hr>
                </div>
                break;

            }
        </div>






        <div class="map-responsive">




        </div>
        <div class="rest">

            <div class="row">
                <div class="col-md-12">
                  

                    <div>
                        
                       
                        <div>
                            <div id="dvDistance">
                            </div>
                        </div>

                    </div>

                    <div id="dvMap" style="min-height:500px"></div>

                </div>
            </div>



        </div>
    </div>

    @{ try
        {

            Boolean allReadyReviwed = false;
            if (Request.Cookies["UserCookie"].Expires < DateTime.Now)
            {
                foreach (var det in ViewBag.userReviews)
                {
                    if (det.username == Request.Cookies["UserCookie"].Value)
                    {
                        allReadyReviwed = true;
                        break;
                    }
                }
                if (allReadyReviwed != true)
                {
                    <div class="review">
                        <h3>Been here? Why not leave a review</h3>
                        @foreach (var details in ViewBag.list1)
                        {
                            using (Html.BeginForm("LeaveReview", "Explore", FormMethod.Post, new { ams = @details.trip_id }))
                            {

                                <span class="star-rating star-5">

                                    @Html.RadioButton("rating", "1", false)<i></i>
                                    @Html.RadioButton("rating", "2", false)<i></i>
                                    @Html.RadioButton("rating", "3", false)<i></i>
                                    @Html.RadioButton("rating", "4", false)<i></i>
                                    @Html.RadioButton("rating", "5", false)<i></i>
                                    @Html.RadioButton("rating", "6", false)<i></i>



                                    <input type="hidden" value=" @details.trip_id" name="ams" />


                                </span>
                                <input type="submit" value="submit" />
                            }

                            break;
                        }

                    </div>
                }
            }


        }
        catch (NullReferenceException) { }
    }
    @section scripts{

        <!--ENSURE YOU CHANGE TO YOUR OWN API KEY HERE !!! -->
        <script src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyCXIYBi8WK7uE93JnEIXiXfHQjCXdBUx8U&" type="text/javascript"></script>

        <script>

            var source, destination;
            var directionsDisplay;
            var res, ras;
            var directionsService = new google.maps.DirectionsService();

            // initialise the location of the map on Chichester in England (ref lat and lng)
            var map = new google.maps.Map(document.getElementById('dvMap'), {
                center: { lat: 50.834697, lng: -0.773792 },
                zoom: 13,
                mapTypeId: 'roadmap'
            });

            google.maps.event.addDomListener(window, 'load', function () {
                new google.maps.places.SearchBox(document.getElementById('travelfrom'));
                new google.maps.places.SearchBox(document.getElementById('travelto'));
                directionsDisplay = new google.maps.DirectionsRenderer({ 'draggable': true });
            });

           window.onload = function() {

                directionsDisplay.setMap(map);

                var jsonObj = @Html.Raw(Json.Encode(ViewBag.coordinates));
                for (i = 0; i < jsonObj .length; i++) { 
                    var startLat = jsonObj[i].startLatitude.replace(",", ".");
                    var startLong = jsonObj[i].startLongitude.replace(",", ".");
                    var endLat = jsonObj[i].endLatitude.replace(",", ".");
                    var endLong = jsonObj[i].endLongitude.replace(",", ".");
                    var source = startLat + "," + startLong;
                    var destination = endLat +","+endLong;
                }
             
                

                var request = {
                    origin: source,
                    destination: destination,
                    travelMode: google.maps.TravelMode.WALKING
                };

                   directionsService.route(request, function (response, status) {
                       if (status == google.maps.DirectionsStatus.OK) {
                           directionsDisplay.setDirections(response);
                       }
                   });

                   //*********DISTANCE AND DURATION**********************//
                   var service = new google.maps.DistanceMatrixService();
                   service.getDistanceMatrix({
                   origins: [source],
                    destinations: [destination],
                    travelMode: google.maps.TravelMode.DRIVING,
                    unitSystem: google.maps.UnitSystem.METRIC,
                    avoidHighways: false,
                    avoidTolls: false
                   }, function (response, status) {

                       if (status == google.maps.DistanceMatrixStatus.OK && response.rows[0].elements[0].status != "ZERO_RESULTS") {
                           var distance = response.rows[0].elements[0].distance.text;
                           var duration = response.rows[0].elements[0].duration.value;
                           var dvDistance = document.getElementById("dvDistance");
                           duration = parseFloat(duration / 60).toFixed(2);
                           dvDistance.innerHTML = "";
                           dvDistance.innerHTML += "Distance: " + distance + "<br />";
                           dvDistance.innerHTML += "Time:" + duration + " min";

                       } else {
                           alert("Unable to find the distance via road.");
                       }
                   });
               }

        </script>
        }
    </html>